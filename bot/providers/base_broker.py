
from abc import ABC, abstractmethod
class BaseBroker(ABC):
    @abstractmethod
    def get_equity(self): ...
    @abstractmethod
    def get_buying_power(self): ...
    @abstractmethod
    def get_cash(self): ...
    @abstractmethod
    def has_open_position(self, symbol: str) -> bool: ...
    @abstractmethod
    def last_price(self, symbol: str): ...
    @abstractmethod
    def place_bracket_buy(self, symbol: str, qty: float, stop_price: float, take_price: float, tif: str = "gtc"): ...
